fastcgi_cache_path /data/nginx/cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
server {
	listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	# PageSpeed Admin
location /ngx_pagespeed_statistics { include acl.conf; }
location /ngx_pagespeed_global_statistics { include acl.conf; }
location /ngx_pagespeed_message { include acl.conf; }
location /pagespeed_console { include acl.conf; }
location ~ ^/pagespeed_admin { include acl.conf; }
location ~ ^/pagespeed_global_admin { include acl.conf; }

# Ensure requests for pagespeed optimized resources go to the pagespeed handler
# and no extraneous headers get set.
location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
  add_header "" "";
}
location ~ "^/pagespeed_static/" { }
location ~ "^/ngx_pagespeed_beacon$" { }



	root /usr/share/nginx/html;
	index index.php index.html index.htm;

	set $skip_cache 0;

	# POST requests and urls with a query string should always go to PHP
	if ($request_method = POST) {
		set $skip_cache 1;
	}   
	#if ($query_string != "") {
	#	set $skip_cache 1;
	#}   

	# Don't cache uris containing the following segments
	if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
		set $skip_cache 1;
	}   

	# Don't use the cache for logged in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
		set $skip_cache 1;
	}	


	# Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
	sendfile on;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html
		try_files $uri $uri/ /index.php?q=$uri&$args;
	}


	# redirect server error pages to the static page /50x.html
	#
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root /usr/share/nginx/html;
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
                try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_cache_bypass $skip_cache;
	        fastcgi_no_cache $skip_cache;
		
		fastcgi_cache WORDPRESS;
		fastcgi_cache_valid   200 302  20m;
        	fastcgi_cache_valid   301 1h;
        	fastcgi_cache_valid   any 1h;
        	fastcgi_cache_min_uses  2;		
	}

        location ~* \.(jpg|jpeg|gif|png|css|js|ico|woff|eot|ttf)$ {
                access_log        off;
                log_not_found     off;
                expires           5d;
		add_header Access-Control-Allow-Origin "*";
        }

	# deny access to . files, for security
	#
	location ~ /\. {
    		access_log off;
    		log_not_found off; 
    		deny all;
	}
	
	location ~ /purge(/.*) {
	    fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
	}

	location = /robots.txt { access_log off; log_not_found off; }


	      # START W3 TOTAL CACHE CONFIG
        # BEGIN W3TC Minify cache
        location ~ /wp-content/cache/minify.*\.js$ {
                types {}
                default_type application/x-javascript;
                add_header Vary "Accept-Encoding";
        }
        location ~ /wp-content/cache/minify.*\.css$ {
                types {}
                default_type text/css;
                add_header Vary "Accept-Encoding";
        }

        location ~ /wp-content/cache/minify.*js\.gzip$ {
                gzip off;
                types {}
                default_type application/x-javascript;
                add_header Vary "Accept-Encoding";
                add_header Content-Encoding gzip;
        }

        location ~ /wp-content/cache/minify.*css\.gzip$ {
                gzip off;
                types {}
                default_type text/css;
                add_header Vary "Accept-Encoding";
                add_header Content-Encoding gzip;
        }
        # END W3TC Minify cache
        # BEGIN W3TC Page Cache cache

        location ~ /wp-content/cache/page_enhanced.*html$ {
                add_header Vary "Accept-Encoding, Cookie";
        }

        location ~ /wp-content/cache/page_enhanced.*gzip$ {
                gzip off;
                types {}
                default_type text/html;
                add_header Vary "Accept-Encoding, Cookie";
                add_header Content-Encoding gzip;
        }

        # END W3TC Page Cache cache

        # BEGIN W3TC Page Cache core
        set $w3tc_rewrite 1;
        if ($request_method = POST) {
        set $w3tc_rewrite 0;
        }

        if ($query_string != "") {
        set $w3tc_rewrite 0;
        }

        if ($request_uri !~ \/$) {
        set $w3tc_rewrite 0;
        }

        if ($http_cookie ~* "(comment_author|wp\-postpass|w3tc_logged_out|wordpress_logged_in|wptouch_switch_toggle)") {
        set $w3tc_rewrite 0;
        }

        set $w3tc_enc "";
        if ($http_accept_encoding ~ gzip) {
        set $w3tc_enc _gzip;
        }

        if (!-f "$document_root/wp-content/cache/page_enhanced/$http_host/$request_uri/_index.html$w3tc_enc") {
        set $w3tc_rewrite 0;
        }

        if ($w3tc_rewrite = 1) {
        rewrite .* "/wp-content/cache/page_enhanced/$http_host/$request_uri/_index.html$w3tc_enc" last;
        }
        # END W3TC Page Cache core


}
